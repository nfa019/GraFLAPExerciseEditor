<library>
<script type="loncapa/perl">
#use 5.014;
#use strict;
#use warnings;

package intwords;


sub makeWordsInt{
	my $maxcount = shift;
        my @words;

        $words[0] = "0";
        $words[1] = "9";
        $words[2] = "-2"; 
        $words[3] = "-10"; 
        $words[4] = "-20"; 

	while ($#words < $maxcount){
		my $newword = main::random(-1000,1000,1);		
                @words = grammar::addWord($newword,@words);
				}
	# sort by length
	@words = sort { length($a) <=> length($b) } @words;

	return @words;
}


sub makeOtherWordsInt{
	my $maxcount = shift;
        my @otherwords;

        $otherwords[0] = "-";
        $otherwords[1] = "-0";
        $otherwords[2] = "-00";
        $otherwords[3] = "00";
        $otherwords[4] = "-1-2";

	while ($#otherwords < $maxcount){
		my $newword = "00" . main::random(-1000,1000,1);		
                @otherwords = grammar::addWord($newword,@otherwords);
		my $newword = "-00" . main::random(-1000,1000,1);		
                @otherwords = grammar::addWord($newword,@otherwords);
        }
	# sort by length
	@otherwords = sort { length($a) <=> length($b) } @otherwords;	
	return @otherwords;
}

# delivers $number words / 2* $number other words for Integers in one string, words separated by %
# words separated by # from other words
sub wordsInt{
	my $number = shift;
	my @words = makeWordsInt($number);
	my @owords = makeOtherWordsInt(2*$number);
	my $longword = grammar::concatenateWords("%",@words) . "!" . grammar::concatenateWords("%",@owords);

        return $longword;
}
</script>
</library>





